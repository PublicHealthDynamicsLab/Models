### influenza model
### mkrauland
### May 2025



##########################################
# SEASONALITY PARAMETERS

# Source: Projecting the transmission dynamics of SARS-CoV-2 through
# the postpandemic period. Science, 14 Apr 2020.

Global seasonal_reduction
seasonal_reduction = 0.5 # reduction at summer solstice

Global peak_day_of_year
peak_day_of_year = 355  # approx Winter solstice

# Don't change these values:
Global max_transmissibility
max_transmissibility = 0

Global seasonal_transmissibility
seasonal_transmissibility = 0

Global days_from_peak
days_from_peak = -1
##########################################
##########################################

condition INF {
  states = S E Ps Is Ia H R Died Import ImportWait Seasonality
  import_start_state = ImportWait
  transmission_mode = proximity
  transmissibility = infectious
  enable_health_records = 0
  exposed_state = E
}

state INF.S {
  wait()
  next()
}

state INF.E {
  set(mySus1,0)
  set_sus(INF,mySus1)
  set(Infect,1)
  
 
  # track vaccination and infection status
  if (Vax>0) then set_state(TRACK,Vac,VacInfect)
  if (Vax<1) then set_state(TRACK,NotVac,NotVacInfect)

  wait(24*lognormal(1.9,1.23))
  # vaccinated
  if (range(age,0,4),Vax>0) then next(Ia) with prob(0.25)
  if (range(age,5,17),Vax>0) then next(Ia) with prob(0.25)
  if (range(age,18,64),Vax>0) then next(Ia) with prob(0.25)
  if (age>=65,Vax>0) then next(Ps)
  # unvaccinated
  if (range(age,0,4),Vax<1) then next(Ia) with prob(0.25)
  if (range(age,5,17),Vax<1) then next(Ia) with prob(0.25)
  if (range(age,18,64),Vax<1) then next(Ia) with prob(0.25)
  if (age>=65,Vax<1) then next(Ps)
  default(Ps)
}


# presymptomatic infectious
state INF.Ps {    
  set_trans(INF,0.5*myInf)
  wait(24)
  next(Is)
}

state INF.Is {
  set_trans(INF,1*myInf)
  set_state(StayHome,No,Symptoms)
  
  #only symptomatic cases can be hospitalized
  #vaccination gives protection against hospitalization based on age
  if (Vax>0,age >= 65) then next(H) with prob(0.084545585)
  if (Vax>0,range(age,50,64)) then next(H) with prob(0.004666089)
  if (Vax>0,range(age,18,49)) then next(H) with prob(0.002469714)
  if (Vax>0,range(age,5,17)) then next(H) with prob(0.001754842)
  if (Vax>0,range(age,0,4)) then next(H) with prob(0.004461846)
  #unvaccinated agents hospitalized at higher rates
  if (Vax<1,age >= 65) then next(H) with prob(0.096363785)
  if (Vax<1,range(age,50,64)) then next(H) with prob(0.015482932)
  if (Vax<1,range(age,18,49)) then next(H) with prob(0.007240753)
  if (Vax<1,range(age,5,17)) then next(H) with prob(0.004195168)
  if (Vax<1,range(age,0,4)) then next(H) with prob(0.009551139)

  wait(24* lognormal(5.0,1.5))
  default(R)
}

state INF.Ia {
  set_trans(INF,0.5*myInf)
  wait(24 * lognormal(4.0, 1.5))
  next(R)
}

state INF.H {
  set_trans(INF,0)
  
   
# some hospitalized agents die; death mitigated by vaccination
## unvaccinated
  if (Vax<1,age>=65) then next(Died) with prob(0.109740115)
  if (Vax<1,range(age,50,64)) then next(Died) with prob(0.062108743)
  if (Vax<1,range(age,18,49)) then next(Died) with prob(0.032577915)
  if (Vax<1,range(age,5,17)) then next(Died) with prob(0.009510279)
  if (Vax<1,range(age,0,4)) then next(Died) with prob(0.009190606)
## vaccinated
  if (Vax>0,age>=65) then next(Died) with prob(0.05409724)
  if (Vax>0,range(age,50,64)) then next(Died) with prob(0.040255667)
  if (Vax>0,range(age,18,49)) then next(Died) with prob(0.02171861)
  if (Vax>0,range(age,5,17)) then next(Died) with prob(0.005594282)
  if (Vax>0,range(age,0,4)) then next(Died) with prob(0.005594282)
  
  wait(0)
  default(R)
}


state INF.R {

  if (mySus1<0.97) then set(mySus1,mySus1+0.03) # waning of immunity
  set_sus(INF,mySus1)
  wait(24*30) # monthly waning in the R state
  next()
}

state INF.Died {
  set_trans(INF,0)
  set_sus(INF,0)
  
  die()
  wait()
  next()
}


##########################################

State(INF,ImportWait) {
  
  wait(until_2022-Oct-15)
  next(Import) 
}

##########################################

State(INF,Import) {
  
  import_count(50)
  wait(24)
  next(Seasonality) 
}

##########################################

State(INF,Seasonality) {

  set(days_from_peak, abs(day_of_year - peak_day_of_year))
 set(seasonal_transmissibility, infectious * (1.0 - seasonal_reduction*(1 - 0.5*(1+cos(2*3.14159*days_from_peak/365)))))
 set_trans(INF, seasonal_transmissibility)

  wait(24)
  next(Seasonality)
}

##########################################

condition StayHome {
  states = No Symptoms Yes
}

state StayHome,No {}

state StayHome.Symptoms {
  wait(0)
  next(Yes) with prob(0.5)
  default(No)
}

state StayHome.Yes {
  absent()
  present(Household)
  wait()
  next()
}

##########################################
